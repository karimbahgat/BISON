"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 3.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path
from decouple import config
import dj_database_url
import pymysql

pymysql.install_as_MySQLdb()


def fromfile(value, **kwargs):
    '''If value is a file path, read value from file contents.'''
    if isinstance(value, str) and os.path.isfile(value):
        with open(value, 'r') as fobj:
            value = fobj.read().rstrip()

    return value


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = fromfile(config('SECRET_KEY', default='abcdefghijklmnop'))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    "whitenoise.runserver_nostatic",
    'django.contrib.staticfiles',

    # thirdparty packages
    'django_jsonform',
    'background_task',

    # apps
    'adminManager',
    'adminImporter',
    'mapDigitizer',
    'adminGeocoder',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['core/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

db_url = fromfile(config('DATABASE_URL', default='sqlite:///db.sqlite3'))
DATABASES = {
    'default': dj_database_url.parse(db_url)
}

# add remote db ssl if specified
db_ssl = config('DATABASE_SSL_CA_PATH', default=None)
if db_ssl:
    db_ssl = BASE_DIR / db_ssl
    DATABASES['default']['OPTIONS'] = {'ssl_ca':db_ssl, 
                                        'ssl_disabled':False,}

# for troubleshooting, uncomment to test that direct db connection works
# import pymysql
# getconf = lambda x: DATABASES['default'][x]
# db = pymysql.connect(host=getconf('HOST'),
#                     port=getconf('PORT'), 
#                     user=getconf('USER'),
#                     password=getconf('PASSWORD'),
#                     ssl_ca=SSL_CA_PATH, 
#                     ssl_disabled=False,
#                     database=getconf('NAME'),
#                     )
# print(db)

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# non-app specific static folders
STATICFILES_DIRS = [
    BASE_DIR / 'core' / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
